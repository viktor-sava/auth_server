plugins {
    id "org.springframework.boot" version "2.7.0"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "java"
    id "java-library"
}

group = "ua.viktor_sava"
version = "1.2"
sourceCompatibility = "11"
targetCompatibility = "11"

ext {
    mapStructVersion = "1.4.2.Final"
    jwtVersion = "0.11.5"
    postgresql = '42.3.4'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-web"
    api "io.jsonwebtoken:jjwt-api:${jwtVersion}"
    compileOnly "org.projectlombok:lombok"
    compileOnly "org.mapstruct:mapstruct:${mapStructVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-orgjson:${jwtVersion}"
    runtimeOnly "mysql:mysql-connector-java"
    runtimeOnly "org.postgresql:postgresql:${postgresql}"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.security:spring-security-test"
}

compileJava {
    options.compilerArgs = [
            '-Amapstruct.defaultComponentModel=spring'
    ]
}

tasks.named("test") {
    useJUnitPlatform()
}
